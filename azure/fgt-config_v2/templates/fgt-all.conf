Content-Type: multipart/mixed; boundary="==Config=="
MIME-Version: 1.0

--==Config==
Content-Type: text/x-shellscript; charset="us-ascii"
MIME-Version: 1.0

%{ if rsa-public-key != null }
config system admin
edit ${adminusername}
set ssh-public-key1 "${rsa-public-key}"
next
end
%{ endif }

config system global
set hostname ${fgt_id}
set admin-sport ${admin_port}
end

config system interface
edit ${public_port}
set alias public
set mode static
set ip ${public_ip} ${public_mask}
set allowaccess ping probe-response
next
edit ${private_port}
set alias private
set mode static
set ip ${private_ip} ${private_mask}
set allowaccess ping probe-response
next
edit ${mgmt_port}
set alias mgmt
set mode static
set ip ${mgmt_ip} ${mgmt_mask}
set allowaccess ping https ssh fgfm
next
end

config system accprofile
edit "user_limited"
set netgrp read-write
set fwgrp read-write
set vpngrp read-write
next
end

%{ if api_key != null }
config system api-user
edit api-user
set api-key ${api_key}
set accprofile "user_limited"
%{ if admin_cidr != "0.0.0.0/0" }
config trusthost
edit 1
set ipv4-trusthost ${admin_cidr}
next
end
%{ endif }
next
end
%{ endif }

config system probe-response
set http-probe-value "Ok"
set mode http-probe
end

config router static
edit 0
set device ${public_port}
set gateway ${public_gw}
next
edit 0
set device ${private_port}
set gateway ${private_gw}
set priority 10
next
end

config firewall policy
edit 0
set name "E-W-traffic"
set srcintf ${private_port}
set dstintf ${private_port}
set srcaddr "all"
set dstaddr "all"
set action accept
set schedule "always"
set service "ALL"
next
edit 0
set name "S-N-traffic"
set srcintf ${private_port}
set dstintf ${public_port}
set srcaddr "all"
set dstaddr "all"
set action accept
set schedule "always"
set service "ALL"
set nat enable
next
end

%{ if fgt_standalone-config != "" }
${fgt_standalone-config}
%{ endif }

%{ if fgt_ha-fgcp-config != "" }
${fgt_ha-fgcp-config}
%{ endif }

%{ if fgt_ha-fgsp-config != "" }
${fgt_ha-fgsp-config}
%{ endif }

%{ if fgt_sdn-config != "" }
${fgt_sdn-config}
%{ endif }

%{ if fgt_bgp-config != "" }
${fgt_bgp-config}
%{ endif }

%{ if fgt_static-config != "" }
${fgt_static-config}
%{ endif }

%{ if fgt_sdwan-config != "" }
${fgt_sdwan-config}
%{ endif }

%{ if fgt_vpn-config != "" }
${fgt_vpn-config}
%{ endif }

%{ if fgt_vxlan-config != "" }
${fgt_vxlan-config}
%{ endif }

%{ if fgt_vhub-config != "" }
${fgt_vhub-config}
%{ endif }

%{ if fgt_ars-config != "" }
${fgt_ars-config}
%{ endif }

%{ if fgt_gwlb-vxlan-config != "" }
${fgt_gwlb-vxlan-config}
%{ endif }

%{ if fgt_fmg-config != "" }
${fgt_fmg-config}
%{ endif }

%{ if fgt_faz-config != "" }
${fgt_faz-config}
%{ endif }

%{ if fgt_xlb-config != "" }
${fgt_xlb-config}
%{ endif }

%{ if fgt_extra-config != "" }
${fgt_extra-config}
%{ endif }

%{ if type == "byol" && fortiflex_token != ""}
--==Config==
Content-Type: text/plain; charset="us-ascii"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
Content-Disposition: attachment; filename="license"

LICENSE-TOKEN:${fortiflex_token}

%{ endif }

%{ if type == "byol" && fileexists(license_file)}
--==Config==
Content-Type: text/plain; charset="us-ascii"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
Content-Disposition: attachment; filename="license"

${file(license_file)}

%{ endif }

--==Config==--